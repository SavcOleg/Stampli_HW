DEPLOYMENT TO RENDER - QUICK STEPS

Your project is ready to deploy! Here's what to do:

OPTION 1: Deploy via Render Dashboard (Easiest)
================================================

1. Go to https://render.com and sign in (or sign up for free)

2. Click "New +" button â†’ Select "Blueprint"

3. Connect your GitHub account (if not connected)

4. Push your code to GitHub:
   git remote add origin YOUR_GITHUB_REPO_URL
   git push -u origin main

5. In Render, select your repository

6. Render will detect render.yaml automatically

7. Set environment variable:
   - OPENAI_API_KEY = your-api-key-here

8. Click "Apply" to deploy both services

9. Wait 5-10 minutes for build

10. Access your apps:
    - API: https://disney-rag-api.onrender.com
    - UI: https://disney-rag-ui.onrender.com


OPTION 2: Deploy Single Service (API Only)
===========================================

1. Go to https://dashboard.render.com

2. Click "New +" â†’ "Web Service"

3. Connect GitHub repo OR use "Public Git repository"

4. Settings:
   - Name: disney-rag-api
   - Environment: Python 3
   - Build Command: pip install -r requirements.txt
   - Start Command: uvicorn src.api.app:app --host 0.0.0.0 --port $PORT
   - Plan: Free

5. Add Environment Variable:
   - Key: OPENAI_API_KEY
   - Value: your-key-here

6. Click "Create Web Service"

7. Wait for deployment (~5-10 min)

8. Your API will be live at: https://disney-rag-api.onrender.com


OPTION 3: Deploy Streamlit UI
==============================

1. Click "New +" â†’ "Web Service"

2. Connect same repository

3. Settings:
   - Name: disney-rag-ui
   - Environment: Python 3
   - Build Command: pip install -r requirements.txt
   - Start Command: streamlit run src/ui/app.py --server.port $PORT --server.address 0.0.0.0 --server.headless true
   - Plan: Free

4. Click "Create Web Service"

5. UI will be live at: https://disney-rag-ui.onrender.com


IMPORTANT NOTES:
================

- Free tier sleeps after 15 min inactivity (first request takes 30-60s to wake)
- Free tier has 512MB RAM limit (should be enough for this project)
- Data files (indices, embeddings) are included in deployment
- First build takes 5-10 minutes
- Subsequent deploys are faster (~2-3 min)


FILES CREATED FOR DEPLOYMENT:
==============================
âœ… render.yaml - Blueprint configuration for 2 services
âœ… Procfile - Process command for API
âœ… runtime.txt - Python version
âœ… .slugignore - Files to exclude from deployment
âœ… requirements.txt - Already exists with all dependencies


VERIFY DEPLOYMENT:
==================

After deployment, test:

API:
curl https://your-api-url.onrender.com/healthz

Should return: {"status":"healthy",...}

UI:
Open https://your-ui-url.onrender.com in browser
Should show Disney RAG interface


TROUBLESHOOTING:
================

If build fails:
- Check logs in Render dashboard
- Ensure all data files are committed to git
- Verify requirements.txt has all dependencies

If app crashes:
- Check RAM usage (free tier = 512MB)
- May need to reduce number of loaded models
- Check environment variables are set

If queries fail:
- Verify OPENAI_API_KEY is set correctly
- Check API quota/billing


READY TO DEPLOY!
================

Your project is fully configured. Just push to GitHub and deploy via Render dashboard.

Good luck! ðŸš€
